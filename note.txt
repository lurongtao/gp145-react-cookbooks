react
react-router-dom
redux
- react-redux
- redux-saga
styled-components
antd-mobile
immutable
hooks



json-server

在home组件体系里：
reducers
- list
- loadData
sagas
- dispatch({
  type: listen_type,
  payload: {
    url: '/api/list'
  }
})
- action(callback)
- loadData(action)

公共sagas:
takeEvery(listen_type, callback)


redux 开发范式：
1、按照功能组织目录
- 容器组件
- UI组件（展示组件，木偶组件）
- action-types
- action-creator
- reducers
- sagas
- index
2、按照角色组织目录


项目部署与发布：
1、前后端不分离
2、前后端分离

windows:
start nginx
nginx -s stop

mac:
nginx
nginx -s stop

centos:
nginx 目录：
/etc/nginx

监测某个端口被哪个进程占用了
lsof -i:80
kill -9 15991

清理DNS缓存
https://jingyan.baidu.com/article/546ae1851b79d51149f28c8d.html

2、前后端分离的部署方案一
好处：
- 后续联调和测试变得简单
- 单独发布前后端服务


wget http://localhost:9000/api/list

http://note.youdao.com/noteshare?id=83af849ce2a06f86dab8a4af103e20be

immutable:
http://note.youdao.com/noteshare?id=86fb17ce7458df2701e3474ecf10366b